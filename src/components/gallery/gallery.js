import React, { PropTypes } from 'react';import flickr from '../../services/flickr/flickr';import Header from '../header/header';import Slider from '../slider/slider';class Gallery extends React.Component {  constructor ( props ) {    super(props);    this.state = {      photo: []    }  }  componentDidMount () {    this.get(1)  }  async queryFlickr (configuration) {    const data = await flickr.getPhotos(configuration)  }  get ( page ) {    const { flickrConfig } = this.props;    const _configWithPages = Object.assign({}, flickrConfig, { page });    const data = this.        data          .then(response => response.json())          .then(( { photos } ) => {            return this.setState({              params  : flickrConfig,              page    : photos.page,              pages   : photos.pages,              photo   : photos.photo,              selected: 0            })          });  }  selectChange ( selected, c ) {    const { params, page } = c;    if ( selected >= params.per_page ) {      return this.get(this.props.flickrConfig, page + 1);    } else if ( selected <= 0 ) {      return this.get(this.props.flickrConfig, page - 1);    } else {      this.setState({        selected      })    }  }  render () {    const { title, paginationOffset } = this.props;    const state = this.state;    return (      <div>        <Header title={ title }/>        <Slider paginationOffset={ paginationOffset }                onSelectImage={ selected => this.selectChange(selected, state) }                paginationOnPageChange={ page => this.get(page) }                onToogleTooltip={ tooltipOpen => this.setState({ tooltipOpen: !state.tooltipOpen }) }                tooltipOpen={ state.tooltipOpen }                { ...state }        />      </div>    )  }}export default Gallery;